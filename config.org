* Emacs config file
* Multiple Cursors
  No need to describe this feature. Everybody knows it.
#+BEGIN_SRC emacs-lisp
(use-package multiple-cursors
  :ensure t
  :init
  (global-set-key (kbd "C-S-c C-S-c") 'mc/edit-lines)
  (global-set-key (kbd "C->") 'mc/mark-next-like-this)
  (global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
  (global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this)
  (define-key mc/keymap (kbd "<return>") nil))
#+END_SRC
  
* Helm
** enable helm
#+BEGIN_SRC emacs-lisp
(use-package helm
  :ensure t
  :init
  (helm-mode 1))
#+END_SRC
** helm global key bindings
#+BEGIN_SRC emacs-lisp
;;bind a key to help
(global-set-key (kbd "M-x") 'helm-M-x)
#+END_SRC

** helm-swoop
   swoop current buffer with M-i
#+BEGIN_SRC emacs-lisp
;;bind a key to help-swoop
(global-set-key (kbd "M-i") 'helm-swoop)
#+END_SRC
   
* Terminal
** Setting default shell to bash
#+BEGIN_SRC emacs-lisp
   (defvar my-term-shell "/bin/bash")
   (defadvice ansi-term (before force-bash)
      (interactive (list my-term-shell)))
   (ad-activate 'ansi-term)
#+END_SRC
** Binding keys to launch eshell
#+BEGIN_SRC emacs-lisp
;;HOW TO SETUP KEY BINDING TO RUN COMMANDS
;;customize this to use keyboard short cut to launch terminal or eshell
(global-set-key (kbd "<C-return>") 'shell)
#+END_SRC

* Org
** Org Bullets
   Better bullets in org mode
#+BEGIN_SRC emacs-lisp
   (use-package org-bullets
      :ensure t
      :config
      (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))
#+END_SRC
* Dired
* Misc
** Prevent emacs from autosaving and cluttering source folders
#+BEGIN_SRC emacs-lisp
(setq auto-save-default nil)
(setq make-backup-file nil)
#+END_SRC
** No Tabs
#+BEGIN_SRC emacs-lisp
(setq-default indent-tabs-mode nil)
#+END_SRC   
** Easy selection of logical region
#+BEGIN_SRC emacs-lisp
(use-package expand-region
  :ensure t
  :init
  (global-set-key (kbd "C-=") 'er/expand-region))
#+END_SRC
** Rainbow delimeters
#+BEGIN_SRC emacs-lisp
(use-package rainbow-delimiters
  :ensure t
  :init
  (rainbow-delimiters-mode))
#+END_SRC
** Winner Mode
   Winner Mode is a global minor mode. When activated, it allows you
   to “undo” (and “redo”) changes in the window configuration with
   the key commands ‘C-c left’ and ‘C-c right’
#+BEGIN_SRC emacs-lisp
(when (fboundp 'winner-mode)
   (winner-mode 1))
#+END_SRC
   
** Vertical indentation guide 
#+BEGIN_SRC emacs-lisp
(use-package indent-guide
  :ensure t
  :init
  (indent-guide-global-mode))
#+END_SRC
   
** Powerline is a better looking status bar at the bottom.
#+BEGIN_SRC emacs-lisp
(use-package powerline
  :ensure t
  :init
  (powerline-default-theme))
#+END_SRC
   
** Simplify interaction 
#+BEGIN_SRC emacs-lisp
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC
** Editing convenience improvements
#+BEGIN_SRC emacs-lisp
(setq scroll-conservatively 100)
(setq ring-bell-function 'ignore)
(when window-system (global-hl-line-mode t))
(when window-system (global-prettify-symbols-mode t))
;;highlight cursor line on buffer opening
(use-package beacon
  :ensure t
  :init
  (beacon-mode -1))
#+END_SRC
** Remove toolbar, menu, scrollbar, startup screen
#+BEGIN_SRC emacs-lisp
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)
(setq inhibit-startup-message t)
#+END_SRC
** Key bindings help display. Currently disabled.
#+BEGIN_SRC emacs-lisp
;;(use-package which-key
;;  :ensure t
;;  :init
;;  (which-key-mode))
#+END_SRC
** enable electric pair mode by default
#+BEGIN_SRC emacs-lisp
(electric-pair-mode 1)
#+END_SRC   
** desktop save mod
   Preserves your buffers across emacs sessions.
#+BEGIN_SRC emacs-lisp
(desktop-save-mode 1)
#+END_SRC      
* Diff
** Ediff -  Visual interface for diff and patches
#+BEGIN_SRC emacs-lisp
;; add key binding if needed here
;;   (use-package ediff
;;      :ensure t
;;      :config
;;      ())))
#+END_SRC
* Origami - text folging support
****  Install dependecies first
***** string manipulation package
#+BEGIN_SRC emacs-lisp
(use-package s
  :ensure t
  :init)
#+END_SRC
***** list api package
#+BEGIN_SRC emacs-lisp
(use-package dash
  :ensure t
  :init)
#+END_SRC
***** make Emacs aware of origami package
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path (expand-file-name "~/.emacs.d/packages/"))
(require 'origami)
#+END_SRC
      
* Font
#+BEGIN_SRC emacs-lisp
(set-face-attribute 'default nil :family "Consolas" :height 120)
#+END_SRC

* rs_common compilation errors
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-x C-r") (lambda () (interactive) (helm-swoop :$query "error:")))
#+END_SRC

* Magit
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-x g") 'magit-status)
#+END_SRC





* Sr SpeedBar - makes speedbar show in current frame
#+BEGIN_SRC emacs-lisp
(use-package sr-speedbar
  :ensure t
  :init)
#+END_SRC   
